---
# Run basic tests for this app on the latest aiidalab-docker image.

name: continuous-integration

on: [push, pull_request]

jobs:

    pre-commit:
    # Adapted from: https://github.com/CasperWA/voila-optimade-client

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.10'

            - uses: pre-commit/action@v2.0.0

    test-notebooks:

        needs: [pre-commit]

        strategy:
            matrix:
                tag: [latest]
                browser: [Chrome, Firefox]
                python-version: ['3.8', '3.10']
                firefox: ['96.0']
            fail-fast: false

        runs-on: ubuntu-latest
        timeout-minutes: 30

        steps:

            - name: Check out app
              uses: actions/checkout@v2

            - name: Cache Python dependencies
              uses: actions/cache@v1
              with:
                  path: ~/.cache/pip
                  key: pip-${{ matrix.python-version }}-tests-${{ hashFiles('**/setup.json') }}
                  restore-keys: pip-${{ matrix.python-version }}-tests

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies for test
              run: |
                  pip install -U -e .[tests]

            - name: Set jupyter token env
              run: echo "JUPYTER_TOKEN=$(openssl rand -hex 32)" >> $GITHUB_ENV

            # The Firefox and its engine geckodrive need do be installed manually to run
            # selenium tests.
            - name: Install Firefox
              uses: browser-actions/setup-firefox@latest
              with:
                  firefox-version: ${{ matrix.firefox }}
              if: matrix.browser == 'Firefox'

            - name: Install geckodriver
              run: |
                  wget -c https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
                  tar xf geckodriver-v0.30.0-linux64.tar.gz -C /usr/local/bin
              if: matrix.browser == 'Firefox'

            - name: Run pytest
              run: pytest --driver ${{ matrix.browser }}
              env:
                  TAG: ${{ matrix.tag }}
